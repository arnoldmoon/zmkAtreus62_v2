/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define MO      1
#define MS      2

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

    behaviors {
        lt {
            flavor = "balanced";
        };
    };

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <13>;
		rows = <5>;
// | SW0 | SW5 | SW10 | SW15 | SW20 | SW25		             | SW25 | SW20 | SW15 | SW10 | SW5 | SW1 |
// | SW1 | SW6 | SW11 | SW16 | SW21 | SW26		             | SW26 | SW21 | SW16 | SW11 | SW6 | SW2 |
// | SW2 | SW7 | SW12 | SW17 | SW22 | SW27		             | SW27 | SW22 | SW17 | SW12 | SW7 | SW3 |
// | SW3 | SW8 | SW13 | SW18 | SW23 | SW28		             | SW28 | SW23 | SW18 | SW13 | SW8 | SW4 |
// | SW4 | SW9 | SW14 | SW19 | SW24 | SW29                   | SW29 | SW24 | SW19 | SW14 | SW9 | SW5 |
//                                    SW30                   | SW30
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)                 RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)
RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(3,6) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12)
		>;
	};
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TILDE &kp N1   &kp N2   &kp N3 &kp N4 &kp N5                           &kp N6     &kp N7 &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q    &kp W    &kp E  &kp R  &kp T                            &kp Y      &kp U  &kp I     &kp O   &kp P    &kp BSLH
&kp LCTRL &kp A    &kp S    &kp D  &kp F  &kp G                            &kp H      &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z    &kp X    &kp C  &kp V  &kp B                            &kp N      &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
&kp LCTRL &kp LALT &kp LGUI &none  &none  &lt MS SPACE &kp MINUS &kp EQUAL &lt MO RET &none  &none     &none   &none    &kp ESC
            >;
        };

        mod_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                &none    &none     &none       &kp LBKT     &kp RBKT     &kp DEL
&trans &none  &none  &none  &none  &none                &kp HOME &kp PG_DN &kp PG_UP   &kp END      &kp PSCRN    &kp C_NEXT
&trans &none  &none  &none  &none  &none                &kp LEFT &kp DOWN  &kp UP      &kp RIGHT    &none        &kp C_PLAY
&trans &none  &none  &none  &none  &none                &none    &none     &none       &none        &none        &kp C_PREV
&trans &trans &trans &none  &none  &trans &none &kp RET &trans   &none     &bootloader &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2
            >;
        };

        mouse_layer {
            bindings = <
&none  &kp F1  &kp F2         &kp F3           &kp F4         &kp F5                          &kp F6 &kp F7   &kp F8     &kp F9   &kp F10 &kp DEL
&trans &kp F11 &kp F12        &mwh SCROLL_DOWN &mwh SCROLL_UP &none                           &none  &none    &none      &none    &none   &none
&trans &none   &mmv MOVE_LEFT &mmv MOVE_DOWN   &mmv MOVE_UP   &mmv MOVE_RIGHT                 &none  &mkp MB1 &mkp MB3   &mkp MB2 &none   &none
&trans &none   &none          &none            &none          &none                           &none  &none    &none      &none    &none   &none
&trans &trans  &trans         &none            &none          &trans          &kp SPACE &none &trans &none    &bt BT_CLR &trans   &trans  &trans
            >;
        };
    };
};
